[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "django.urls",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.urls",
        "description": "django.urls",
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "AdminBank",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Timing",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "HomePageImage",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "AboutUs",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Team",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Service",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Partners",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Event",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "MainService",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Membership",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "SubscriptionPlan",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "UserContact",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "NewsLetter",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Membership",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Service",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Timing",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "download_csv",
        "importPath": "core.views",
        "description": "core.views",
        "isExtraImport": true,
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "urllib.request",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.request",
        "description": "urllib.request",
        "detail": "urllib.request",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "django.core.files",
        "description": "django.core.files",
        "isExtraImport": true,
        "detail": "django.core.files",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "connect.asgi",
        "description": "connect.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "connect.asgi",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "TIME_ZONE = 'Asia/Kathmandu'\nUSE_TZ = True\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure--dd5f&onb$_2*rde=ddl7a9ro%q8i2cid(a#3hw%%3s0b5#7@%'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "USE_TZ = True\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure--dd5f&onb$_2*rde=ddl7a9ro%q8i2cid(a#3hw%%3s0b5#7@%'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure--dd5f&onb$_2*rde=ddl7a9ro%q8i2cid(a#3hw%%3s0b5#7@%'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure--dd5f&onb$_2*rde=ddl7a9ro%q8i2cid(a#3hw%%3s0b5#7@%'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'core'\n]",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'connect.urls'",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "ROOT_URLCONF = 'connect.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / os.path.join('templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / os.path.join('templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "WSGI_APPLICATION = 'connect.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_URL = '/media/'",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# JAZZMIN_UI_TWEAKS = {",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# JAZZMIN_UI_TWEAKS = {\n#     \"theme\": \"minty\",",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# JAZZMIN_UI_TWEAKS = {\n#     \"theme\": \"minty\",\n#     \"dark_mode_theme\": \"superhero\",\n# }\nJAZZMIN_SETTINGS ={",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# JAZZMIN_UI_TWEAKS = {\n#     \"theme\": \"minty\",\n#     \"dark_mode_theme\": \"superhero\",\n# }\nJAZZMIN_SETTINGS ={\n    \"site_title\": \"Connect Admin\",",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "connect.settings",
        "description": "connect.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# JAZZMIN_UI_TWEAKS = {\n#     \"theme\": \"minty\",\n#     \"dark_mode_theme\": \"superhero\",\n# }\nJAZZMIN_SETTINGS ={\n    \"site_title\": \"Connect Admin\",\n     \"site_header\": \"Connect\",\n      \"site_brand\": \"Connect\",\n}",
        "detail": "connect.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "connect.urls",
        "description": "connect.urls",
        "peekOfCode": "urlpatterns = [\n    path('',include('core.urls')),\n    path('admin/', admin.site.urls),\n] \nurlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\nurlpatterns +=  static( settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)",
        "detail": "connect.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "connect.wsgi",
        "description": "connect.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "connect.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0001_initial",
        "description": "core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AboutUs',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0002_rename_imgage_aboutus_image",
        "description": "core.migrations.0002_rename_imgage_aboutus_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='aboutus',\n            old_name='imgage',\n            new_name='image',\n        ),",
        "detail": "core.migrations.0002_rename_imgage_aboutus_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0003_remove_team_socia_link_team_facebook_link_and_more",
        "description": "core.migrations.0003_remove_team_socia_link_team_facebook_link_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0002_rename_imgage_aboutus_image'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='team',\n            name='socia_link',\n        ),\n        migrations.AddField(",
        "detail": "core.migrations.0003_remove_team_socia_link_team_facebook_link_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0004_alter_event_date",
        "description": "core.migrations.0004_alter_event_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0003_remove_team_socia_link_team_facebook_link_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='event',\n            name='date',\n            field=models.DateTimeField(auto_now_add=True),\n        ),",
        "detail": "core.migrations.0004_alter_event_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0005_alter_event_date",
        "description": "core.migrations.0005_alter_event_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0004_alter_event_date'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='event',\n            name='date',\n            field=models.DateTimeField(),\n        ),",
        "detail": "core.migrations.0005_alter_event_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0006_membership_membership_receipt_and_more",
        "description": "core.migrations.0006_membership_membership_receipt_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0005_alter_event_date'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='membership',\n            name='membership_receipt',\n            field=models.FileField(blank=True, null=True, upload_to=''),\n        ),",
        "detail": "core.migrations.0006_membership_membership_receipt_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0007_mainservice_date_mainservice_hover_text_and_more",
        "description": "core.migrations.0007_mainservice_date_mainservice_hover_text_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0006_membership_membership_receipt_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='mainservice',\n            name='date',\n            field=models.DateTimeField(auto_now=True),\n        ),",
        "detail": "core.migrations.0007_mainservice_date_mainservice_hover_text_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0008_usercontact",
        "description": "core.migrations.0008_usercontact",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0007_mainservice_date_mainservice_hover_text_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserContact',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(blank=True, max_length=255, null=True)),",
        "detail": "core.migrations.0008_usercontact",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0009_team_description",
        "description": "core.migrations.0009_team_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0008_usercontact'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='team',\n            name='description',\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "core.migrations.0009_team_description",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0010_eventfeatures_contact_map",
        "description": "core.migrations.0010_eventfeatures_contact_map",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0009_team_description'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='EventFeatures',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(blank=True, max_length=255, null=True)),",
        "detail": "core.migrations.0010_eventfeatures_contact_map",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0011_alter_timing_end_time_alter_timing_start_time",
        "description": "core.migrations.0011_alter_timing_end_time_alter_timing_start_time",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0010_eventfeatures_contact_map'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='timing',\n            name='end_time',\n            field=models.TimeField(),\n        ),",
        "detail": "core.migrations.0011_alter_timing_end_time_alter_timing_start_time",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0012_contact_facebook_contact_instagram_contact_linkedin_and_more",
        "description": "core.migrations.0012_contact_facebook_contact_instagram_contact_linkedin_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0011_alter_timing_end_time_alter_timing_start_time'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='contact',\n            name='facebook',\n            field=models.URLField(blank=True, null=True),\n        ),",
        "detail": "core.migrations.0012_contact_facebook_contact_instagram_contact_linkedin_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0013_newsletter",
        "description": "core.migrations.0013_newsletter",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0012_contact_facebook_contact_instagram_contact_linkedin_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NewsLetter',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('email', models.EmailField(blank=True, max_length=254, null=True)),",
        "detail": "core.migrations.0013_newsletter",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0014_contact_tiktok",
        "description": "core.migrations.0014_contact_tiktok",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0013_newsletter'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='contact',\n            name='tiktok',\n            field=models.URLField(blank=True, null=True),\n        ),",
        "detail": "core.migrations.0014_contact_tiktok",
        "documentation": {}
    },
    {
        "label": "MembershipAdmin",
        "kind": 6,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "class MembershipAdmin(admin.ModelAdmin):\n  list_display =['user','phone','membership_duration']\n  def download_csv(self, request, queryset):\n        # Generate the CSV file\n        csv_data = generate_membership_csv()\n        # Create the HTTP response with CSV file\n        response = HttpResponse(content_type='text/csv')\n        response['Content-Disposition'] = 'attachment; filename=\"memberships.csv\"'\n        # Write the CSV file content to the response\n        writer = csv.writer(response)",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "MembershipAdmin",
        "kind": 6,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "class MembershipAdmin(admin.ModelAdmin):\n    list_display = ['user', 'phone', 'membership_duration']\n    def download_csv(self, request, queryset):\n        # Generate the CSV file\n        csv_data = generate_membership_csv()\n        # Create the HTTP response with CSV file\n        response = HttpResponse(content_type='text/csv')\n        response['Content-Disposition'] = 'attachment; filename=\"memberships.csv\"'\n        # Write the CSV file content to the response\n        writer = csv.writer(response)",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "CoreConfig",
        "kind": 6,
        "importPath": "core.apps",
        "description": "core.apps",
        "peekOfCode": "class CoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core'",
        "detail": "core.apps",
        "documentation": {}
    },
    {
        "label": "navbar_footer_context",
        "kind": 2,
        "importPath": "core.context_processors",
        "description": "core.context_processors",
        "peekOfCode": "def navbar_footer_context(request):\n    # Retrieve the necessary objects\n    contact_data = Contact.objects.last()\n    service_data = Service.objects.all()[:4]\n    timing_data = Timing.objects.last()\n    # Return a dictionary with the objects\n    return {\n        'contact_data': contact_data,\n        'footer_data': service_data,\n        'timing_data':timing_data,",
        "detail": "core.context_processors",
        "documentation": {}
    },
    {
        "label": "generate_membership_csv",
        "kind": 2,
        "importPath": "core.csv_generator",
        "description": "core.csv_generator",
        "peekOfCode": "def generate_membership_csv():\n    memberships = Membership.objects.all()\n    with open('memberships.csv', 'w', newline='') as csvfile:\n        fieldnames = ['User First Name', 'Address', 'Phone', 'Profile Image', 'Passport Front', 'Passport Back', 'Membership Type', 'Membership Duration']\n        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n        writer.writeheader()\n        for membership in memberships:\n            profile_image_url = membership.profile.url if membership.profile else ''\n            passport_front_url = membership.passport_front.url if membership.passport_front else ''\n            passport_back_url = membership.passport_back.url if membership.passport_back else ''",
        "detail": "core.csv_generator",
        "documentation": {}
    },
    {
        "label": "AdminBank",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class AdminBank(models.Model):\n    account_name = models.CharField(max_length=255)\n    bank_name = models.CharField(max_length=255)\n    branch = models.CharField(max_length=255)\n    account_number = models.CharField(max_length=255)\n    qr_code = models.ImageField(upload_to=\"admin_bank\")\n    def __str__(self):\n        return self.account_name\nclass Timing(models.Model):\n    first_day = models.CharField(max_length=255)",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Timing",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Timing(models.Model):\n    first_day = models.CharField(max_length=255)\n    last_day = models.CharField(max_length=255)\n    start_time = models.TimeField()\n    end_time = models.TimeField()\n    def __str__(self):\n        return f\" {self.first_day} - {self.last_day} \"\nclass HomePageImage(models.Model):\n    name = models.CharField(max_length=255, blank=True, null=True)\n    image = models.ImageField(upload_to=\"home\")",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "HomePageImage",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class HomePageImage(models.Model):\n    name = models.CharField(max_length=255, blank=True, null=True)\n    image = models.ImageField(upload_to=\"home\")\n    def __str__(self):\n        return self.name\nclass AboutUs(models.Model):\n    image = models.ImageField(upload_to=\"abouts/images\", blank=True, null=True)\n    text = models.TextField(blank=True, null=True)\n    def __str__(self):\n        return self.text",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "AboutUs",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class AboutUs(models.Model):\n    image = models.ImageField(upload_to=\"abouts/images\", blank=True, null=True)\n    text = models.TextField(blank=True, null=True)\n    def __str__(self):\n        return self.text\n# class SocialLink(models.Model):\n#   name = models.CharField(max_length=255, blank=True, null=True)\n#   link = models.URLField(blank=True,null=True)\nclass Team(models.Model):\n    image = models.ImageField(upload_to=\"team/images\", blank=True, null=True)",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Team",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Team(models.Model):\n    image = models.ImageField(upload_to=\"team/images\", blank=True, null=True)\n    name = models.CharField(max_length=255)\n    position = models.CharField(max_length=255, blank=True, null=True)\n    description = models.TextField(blank=True, null=True)\n    facebook_link = models.URLField(\n        blank=True, null=True, default=\"https://www.facebook.com/\"\n    )\n    instagram_link = models.URLField(\n        blank=True, null=True, default=\"https://www.instagram.com/\"",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Service",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Service(models.Model):\n    name = models.CharField(max_length=255, blank=True, null=True)\n    image = models.ImageField(upload_to=\"service/images\")\n    text = models.TextField()\n    def __str__(self):\n        return self.name\nclass Partners(models.Model):\n    name = models.CharField(max_length=255)\n    image = models.ImageField(upload_to=\"partner/images\")\n    def __str__(self):",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Partners",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Partners(models.Model):\n    name = models.CharField(max_length=255)\n    image = models.ImageField(upload_to=\"partner/images\")\n    def __str__(self):\n        return self.name\nclass EventFeatures(models.Model):\n    name = models.CharField(max_length=255, blank=True, null=True)\n    description = models.CharField(max_length=255, blank=True, null=True)\n    def __str__(self):\n        return self.name",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "EventFeatures",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class EventFeatures(models.Model):\n    name = models.CharField(max_length=255, blank=True, null=True)\n    description = models.CharField(max_length=255, blank=True, null=True)\n    def __str__(self):\n        return self.name\nclass Event(models.Model):\n    name = models.CharField(\n        max_length=255, null=True, blank=True, default=\"Event Title\"\n    )\n    description = models.TextField(null=True, blank=True)",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Event",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Event(models.Model):\n    name = models.CharField(\n        max_length=255, null=True, blank=True, default=\"Event Title\"\n    )\n    description = models.TextField(null=True, blank=True)\n    image = models.ImageField(upload_to=\"event/images\", blank=True, null=True)\n    location = models.CharField(max_length=255, blank=True, null=True)\n    hover_text = models.CharField(max_length=255, blank=True, null=True)\n    date = models.DateTimeField()\n    def __str__(self):",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "MainService",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class MainService(models.Model):\n    name = models.CharField(max_length=255, blank=True, null=True)\n    description = models.TextField(null=True, blank=True)\n    image = models.ImageField(upload_to=\"mainService/images\", null=True, blank=True)\n    hover_text = models.CharField(max_length=255, blank=True, null=True)\n    location = models.CharField(max_length=255, null=True, blank=True)\n    price = models.PositiveIntegerField(default=0)\n    date = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.name",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Contact(models.Model):\n    phone = models.CharField(max_length=20)\n    email = models.EmailField()\n    address = models.CharField(max_length=255)\n    map = models.TextField(blank=True, null=True)\n    facebook = models.URLField(blank=True, null=True)\n    twitter = models.URLField(blank=True, null=True)\n    youtube = models.URLField(blank=True, null=True)\n    instagram = models.URLField(blank=True, null=True)\n    linkedin = models.URLField(blank=True, null=True)",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Membership",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Membership(models.Model):\n    MEMBERSHIP_TYPE_INDIVIDUAL = \"individual\"\n    MEMBERSHIP_TYPE_FAMILY = \"family\"\n    MEMBERSHIP_TYPE_STUDENT = \"student\"\n    MEMBERSHIP_TYPE_CHOICES = [\n        (MEMBERSHIP_TYPE_INDIVIDUAL, \"individual\"),\n        (MEMBERSHIP_TYPE_FAMILY, \"family\"),\n        (MEMBERSHIP_TYPE_STUDENT, \"student\"),\n    ]\n    MEMBERSHIP_DURATION_ANNUAL = \"annual\"",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "SubscriptionPlan",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class SubscriptionPlan(models.Model):\n    name = models.CharField(max_length=255)\n    description = models.TextField(null=True, blank=True)\n    def __str__(self):\n        return self.name\nclass UserContact(models.Model):\n    name = models.CharField(max_length=255, blank=True, null=True)\n    email = models.EmailField(blank=True, null=True)\n    subject = models.CharField(max_length=255, null=True, blank=True)\n    message = models.TextField(max_length=True, null=True)",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "UserContact",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class UserContact(models.Model):\n    name = models.CharField(max_length=255, blank=True, null=True)\n    email = models.EmailField(blank=True, null=True)\n    subject = models.CharField(max_length=255, null=True, blank=True)\n    message = models.TextField(max_length=True, null=True)\n    def __str__(self):\n        return self.name\nclass NewsLetter(models.Model):\n    email = models.EmailField(blank=True, null=True)\n    def __str__(self):",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "NewsLetter",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class NewsLetter(models.Model):\n    email = models.EmailField(blank=True, null=True)\n    def __str__(self):\n        return self.email",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n  path('',views.HomeView.as_view(), name='home'),\n  path('aboutus/', views.AboutUsView.as_view(),name='aboutus'),\n  path('event/', views.EventView.as_view(),name='event'),\n  path('event/<int:pk>/', views.EventDetailView.as_view(),name='event'),\n  path('service/', views.ServiceView.as_view(),name='service'),\n  path('service/<int:pk>/', views.ServiceDetailView.as_view(),name='service'),\n  path('contact/', views.ContactView.as_view(),name='contact'),\n  # path('usercontact/', views.UserContactView.as_view(),name='user-contact'),\n  path('membership/', views.MembershipView.as_view(),name='membership'),",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "HomeView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class HomeView(View):\n  def get(self,request):\n    aboutus = AboutUs.objects.first()\n    teams = Team.objects.all()\n    services = Service.objects.all()\n    partners = Partners.objects.all()\n    events = Event.objects.all()\n    home_page_images  = HomePageImage.objects.all()\n    # timing = Timing.objects.last()\n    # contact = Contact.objects.last()",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "AboutUsView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class AboutUsView(View):\n  def get(self,request):\n    aboutus = AboutUs.objects.first()\n    teams = Team.objects.all()\n    services = Service.objects.all()\n    partners = Partners.objects.all()\n    events = Event.objects.all()\n    context = {\n      'about':aboutus,\n      'teams':teams,",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "EventView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class EventView(View):\n  def get(self, request):\n    upcoming_events = Event.objects.order_by('date')[:3]\n    events = Event.objects.all()\n    partners = Partners.objects.all()\n    context = {\n    'upcoming_events':upcoming_events,\n    'events':events,\n    'partners':partners,\n    }",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "EventDetailView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class EventDetailView(View):\n  def get(self,request, pk):\n    partners = Partners.objects.all()\n    event = Event.objects.get(pk=pk)\n    context = {\n    'partners':partners,\n    'event':event,\n    }\n    return render(request,'event_detail.html', context)\nclass ServiceView(View):",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "ServiceView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class ServiceView(View):\n  def get(self, request):\n    services = MainService.objects.all()\n    partners = Partners.objects.all()\n    services_seconday = Service.objects.all()[:3]\n    context = {\n      'services':services,\n      'partners':partners,\n      'services_secondary':services_seconday,\n    }",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "ServiceDetailView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class ServiceDetailView(View):\n  def get(self,request,pk):\n    service = MainService.objects.get(id=pk)\n    partners = Partners.objects.all()\n    context = {\n      'service':service,\n      'partners':partners,\n    }\n    return render(request,'service_detail.html',context)\nclass ContactView(View):",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "ContactView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class ContactView(View):\n  def get(self, request):\n    contact = Contact.objects.last()\n    partners = Partners.objects.all()\n    context = {\n      'contact' : contact,\n      'partners':partners,\n    }\n    return render(request, 'contact.html', context)\n  def post(self,request):",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "MembershipView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class MembershipView(View):\n  def get(self,request):\n    admin_bank = AdminBank.objects.last()\n    sub_plans = SubscriptionPlan.objects.all()\n    context = {\n      'admin_bank':admin_bank,\n      'sub_plans':sub_plans,\n    }\n    return render(request,'mem.html',context)\n  def post(self, request):",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "NewsLetterView",
        "kind": 6,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "class NewsLetterView(View):\n  def post(self,request):\n    email = request.POST.get('email')\n    newsletter = NewsLetter(email=email)\n    newsletter.save()\n    return redirect('contact')",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "download_csv",
        "kind": 2,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "def download_csv(request):\n    # Generate the CSV file\n    generate_membership_csv()\n    # Set the appropriate response headers\n    response = HttpResponse(content_type='text/csv')\n    response['Content-Disposition'] = 'attachment; filename=\"memberships.csv\"'\n    # Write the CSV file content to the response\n    with open('memberships.csv', 'r') as csvfile:\n        csv_data = csvfile.read()\n        response.write(csv_data)",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'connect.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]